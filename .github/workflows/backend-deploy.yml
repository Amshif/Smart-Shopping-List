name: Deploy FastAPI Backend to AWS Lambda

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1  
  LAMBDA_FUNCTION_NAME: smart-shop-list
  PYTHON_VERSION: '3.13'  # Match your Lambda runtime

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Run tests
      #   working-directory: ./backend
      #   run: |
      #     pip install pytest pytest-cov
      #     pytest tests/ || echo "No tests found, skipping..."
      #   continue-on-error: false

      - name: Create deployment package
        working-directory: ./backend
        run: |
          # Create package directory
          mkdir -p package
          
          # Install dependencies to package directory
          pip install -r requirements.txt -t package/
          
          # Copy application code
          cp -r app package/
          
          # Create zip file
          cd package
          zip -r ../lambda-deployment.zip . -x '*.pyc' -x '*__pycache__*' -x '*.git*'
          cd ..
          
          # Verify zip contents
          echo "Deployment package contents:"
          unzip -l lambda-deployment.zip | head -20

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Lambda
        working-directory: ./backend
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://lambda-deployment.zip

      - name: Wait for Lambda update to complete
        run: |
          aws lambda wait function-updated \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }}

      - name: Update Lambda configuration
        run: |
          aws lambda update-function-configuration \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --handler app.main.handler \
            --environment Variables="{ENVIRONMENT=production}" \
            --timeout 30 \
            --memory-size 512
            # Adjust timeout and memory as needed

      - name: Publish Lambda version
        run: |
          VERSION=$(aws lambda publish-version \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --description "Deployed via GitHub Actions - ${{ github.sha }}" \
            --query 'Version' \
            --output text)
          echo "Published Lambda version: $VERSION"

      - name: Deployment Success
        run: |
          FUNCTION_URL=$(aws lambda get-function-url-config \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --query 'FunctionUrl' \
            --output text 2>/dev/null || echo "No Function URL configured")
          echo "âœ… Backend deployed successfully to AWS Lambda!"
          echo "Function URL: $FUNCTION_URL"